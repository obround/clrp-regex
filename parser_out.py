# +----------------------------------------+
# | THIS CODE HAS BEEN GENERATED BY clrp   |
# | DO NOT EDIT                            |
# +----------------------------------------+

# errors
class ParseError(Exception): pass

# accept action
class Accept: pass

# shift action
class Shift:
    def __init__(self, transition_state):
        self.transition_state = transition_state

# reduce action
class Reduce:
    def __init__(self, lhs, rhs):
        self.lhs = lhs
        self.rhs = rhs

# main parser
class Parser:
    def __init__(self):
        self.dispatch = {}
        self.table = {
            (0, 'regex'): 1,
            (0, 'alt'): 2,
            (0, 'basic'): 3,
            (0, 'concat'): 4,
            (0, 'reserved'): 5,
            (0, 'zero_or_more'): 6,
            (0, 'one_or_more'): 7,
            (0, 'zero_or_one'): 8,
            (0, 'atom'): 9,
            (0, 'group'): 10,
            (0, 'char'): 11,
            (0, 'wildcard'): 12,
            (0, 'positive_set'): 13,
            (0, 'negative_set'): 14,
            (0, 'LPAREN'): Shift(15),
            (0, 'CHAR'): Shift(16),
            (0, 'escape_char'): 17,
            (0, 'DOT'): Shift(18),
            (0, 'LBRACKET'): Shift(19),
            (0, 'SLASH'): Shift(20),
            (1, 'ALT'): Shift(21),
            (1, '$'): Accept(),
            (2, '$'): Reduce("regex", ['alt']),
            (2, 'ALT'): Reduce("regex", ['alt']),
            (3, 'reserved'): 23,
            (3, 'zero_or_more'): 6,
            (3, 'one_or_more'): 7,
            (3, 'zero_or_one'): 8,
            (3, 'atom'): 9,
            (3, 'group'): 10,
            (3, 'char'): 11,
            (3, 'wildcard'): 12,
            (3, 'positive_set'): 13,
            (3, 'negative_set'): 14,
            (3, 'LPAREN'): Shift(15),
            (3, 'CHAR'): Shift(16),
            (3, 'escape_char'): 17,
            (3, 'DOT'): Shift(18),
            (3, 'LBRACKET'): Shift(19),
            (3, 'SLASH'): Shift(20),
            (3, '$'): Reduce("regex", ['basic']),
            (3, 'ALT'): Reduce("regex", ['basic']),
            (4, '$'): Reduce("basic", ['concat']),
            (4, 'ALT'): Reduce("basic", ['concat']),
            (4, 'DOT'): Reduce("basic", ['concat']),
            (4, 'LBRACKET'): Reduce("basic", ['concat']),
            (4, 'CHAR'): Reduce("basic", ['concat']),
            (4, 'LPAREN'): Reduce("basic", ['concat']),
            (4, 'SLASH'): Reduce("basic", ['concat']),
            (5, '$'): Reduce("basic", ['reserved']),
            (5, 'ALT'): Reduce("basic", ['reserved']),
            (5, 'DOT'): Reduce("basic", ['reserved']),
            (5, 'LBRACKET'): Reduce("basic", ['reserved']),
            (5, 'CHAR'): Reduce("basic", ['reserved']),
            (5, 'LPAREN'): Reduce("basic", ['reserved']),
            (5, 'SLASH'): Reduce("basic", ['reserved']),
            (6, '$'): Reduce("reserved", ['zero_or_more']),
            (6, 'ALT'): Reduce("reserved", ['zero_or_more']),
            (6, 'DOT'): Reduce("reserved", ['zero_or_more']),
            (6, 'LBRACKET'): Reduce("reserved", ['zero_or_more']),
            (6, 'CHAR'): Reduce("reserved", ['zero_or_more']),
            (6, 'LPAREN'): Reduce("reserved", ['zero_or_more']),
            (6, 'SLASH'): Reduce("reserved", ['zero_or_more']),
            (7, '$'): Reduce("reserved", ['one_or_more']),
            (7, 'ALT'): Reduce("reserved", ['one_or_more']),
            (7, 'DOT'): Reduce("reserved", ['one_or_more']),
            (7, 'LBRACKET'): Reduce("reserved", ['one_or_more']),
            (7, 'CHAR'): Reduce("reserved", ['one_or_more']),
            (7, 'LPAREN'): Reduce("reserved", ['one_or_more']),
            (7, 'SLASH'): Reduce("reserved", ['one_or_more']),
            (8, '$'): Reduce("reserved", ['zero_or_one']),
            (8, 'ALT'): Reduce("reserved", ['zero_or_one']),
            (8, 'DOT'): Reduce("reserved", ['zero_or_one']),
            (8, 'LBRACKET'): Reduce("reserved", ['zero_or_one']),
            (8, 'CHAR'): Reduce("reserved", ['zero_or_one']),
            (8, 'LPAREN'): Reduce("reserved", ['zero_or_one']),
            (8, 'SLASH'): Reduce("reserved", ['zero_or_one']),
            (9, 'STAR'): Shift(24),
            (9, 'PLUS'): Shift(25),
            (9, 'OPT'): Shift(26),
            (9, '$'): Reduce("reserved", ['atom']),
            (9, 'ALT'): Reduce("reserved", ['atom']),
            (9, 'DOT'): Reduce("reserved", ['atom']),
            (9, 'LBRACKET'): Reduce("reserved", ['atom']),
            (9, 'CHAR'): Reduce("reserved", ['atom']),
            (9, 'LPAREN'): Reduce("reserved", ['atom']),
            (9, 'SLASH'): Reduce("reserved", ['atom']),
            (10, '$'): Reduce("atom", ['group']),
            (10, 'STAR'): Reduce("atom", ['group']),
            (10, 'PLUS'): Reduce("atom", ['group']),
            (10, 'OPT'): Reduce("atom", ['group']),
            (10, 'ALT'): Reduce("atom", ['group']),
            (10, 'DOT'): Reduce("atom", ['group']),
            (10, 'LBRACKET'): Reduce("atom", ['group']),
            (10, 'CHAR'): Reduce("atom", ['group']),
            (10, 'LPAREN'): Reduce("atom", ['group']),
            (10, 'SLASH'): Reduce("atom", ['group']),
            (11, '$'): Reduce("atom", ['char']),
            (11, 'STAR'): Reduce("atom", ['char']),
            (11, 'PLUS'): Reduce("atom", ['char']),
            (11, 'OPT'): Reduce("atom", ['char']),
            (11, 'ALT'): Reduce("atom", ['char']),
            (11, 'DOT'): Reduce("atom", ['char']),
            (11, 'LBRACKET'): Reduce("atom", ['char']),
            (11, 'CHAR'): Reduce("atom", ['char']),
            (11, 'LPAREN'): Reduce("atom", ['char']),
            (11, 'SLASH'): Reduce("atom", ['char']),
            (12, '$'): Reduce("atom", ['wildcard']),
            (12, 'STAR'): Reduce("atom", ['wildcard']),
            (12, 'PLUS'): Reduce("atom", ['wildcard']),
            (12, 'OPT'): Reduce("atom", ['wildcard']),
            (12, 'ALT'): Reduce("atom", ['wildcard']),
            (12, 'DOT'): Reduce("atom", ['wildcard']),
            (12, 'LBRACKET'): Reduce("atom", ['wildcard']),
            (12, 'CHAR'): Reduce("atom", ['wildcard']),
            (12, 'LPAREN'): Reduce("atom", ['wildcard']),
            (12, 'SLASH'): Reduce("atom", ['wildcard']),
            (13, '$'): Reduce("atom", ['positive_set']),
            (13, 'STAR'): Reduce("atom", ['positive_set']),
            (13, 'PLUS'): Reduce("atom", ['positive_set']),
            (13, 'OPT'): Reduce("atom", ['positive_set']),
            (13, 'ALT'): Reduce("atom", ['positive_set']),
            (13, 'DOT'): Reduce("atom", ['positive_set']),
            (13, 'LBRACKET'): Reduce("atom", ['positive_set']),
            (13, 'CHAR'): Reduce("atom", ['positive_set']),
            (13, 'LPAREN'): Reduce("atom", ['positive_set']),
            (13, 'SLASH'): Reduce("atom", ['positive_set']),
            (14, '$'): Reduce("atom", ['negative_set']),
            (14, 'STAR'): Reduce("atom", ['negative_set']),
            (14, 'PLUS'): Reduce("atom", ['negative_set']),
            (14, 'OPT'): Reduce("atom", ['negative_set']),
            (14, 'ALT'): Reduce("atom", ['negative_set']),
            (14, 'DOT'): Reduce("atom", ['negative_set']),
            (14, 'LBRACKET'): Reduce("atom", ['negative_set']),
            (14, 'CHAR'): Reduce("atom", ['negative_set']),
            (14, 'LPAREN'): Reduce("atom", ['negative_set']),
            (14, 'SLASH'): Reduce("atom", ['negative_set']),
            (15, 'regex'): 27,
            (15, 'alt'): 28,
            (15, 'basic'): 29,
            (15, 'concat'): 30,
            (15, 'reserved'): 31,
            (15, 'zero_or_more'): 32,
            (15, 'one_or_more'): 33,
            (15, 'zero_or_one'): 34,
            (15, 'atom'): 35,
            (15, 'group'): 36,
            (15, 'char'): 37,
            (15, 'wildcard'): 38,
            (15, 'positive_set'): 39,
            (15, 'negative_set'): 40,
            (15, 'LPAREN'): Shift(41),
            (15, 'CHAR'): Shift(42),
            (15, 'escape_char'): 43,
            (15, 'DOT'): Shift(44),
            (15, 'LBRACKET'): Shift(45),
            (15, 'SLASH'): Shift(46),
            (16, '$'): Reduce("char", ['CHAR']),
            (16, 'STAR'): Reduce("char", ['CHAR']),
            (16, 'PLUS'): Reduce("char", ['CHAR']),
            (16, 'OPT'): Reduce("char", ['CHAR']),
            (16, 'ALT'): Reduce("char", ['CHAR']),
            (16, 'DOT'): Reduce("char", ['CHAR']),
            (16, 'LBRACKET'): Reduce("char", ['CHAR']),
            (16, 'CHAR'): Reduce("char", ['CHAR']),
            (16, 'LPAREN'): Reduce("char", ['CHAR']),
            (16, 'SLASH'): Reduce("char", ['CHAR']),
            (17, '$'): Reduce("char", ['escape_char']),
            (17, 'STAR'): Reduce("char", ['escape_char']),
            (17, 'PLUS'): Reduce("char", ['escape_char']),
            (17, 'OPT'): Reduce("char", ['escape_char']),
            (17, 'ALT'): Reduce("char", ['escape_char']),
            (17, 'DOT'): Reduce("char", ['escape_char']),
            (17, 'LBRACKET'): Reduce("char", ['escape_char']),
            (17, 'CHAR'): Reduce("char", ['escape_char']),
            (17, 'LPAREN'): Reduce("char", ['escape_char']),
            (17, 'SLASH'): Reduce("char", ['escape_char']),
            (18, '$'): Reduce("wildcard", ['DOT']),
            (18, 'STAR'): Reduce("wildcard", ['DOT']),
            (18, 'PLUS'): Reduce("wildcard", ['DOT']),
            (18, 'OPT'): Reduce("wildcard", ['DOT']),
            (18, 'ALT'): Reduce("wildcard", ['DOT']),
            (18, 'DOT'): Reduce("wildcard", ['DOT']),
            (18, 'LBRACKET'): Reduce("wildcard", ['DOT']),
            (18, 'CHAR'): Reduce("wildcard", ['DOT']),
            (18, 'LPAREN'): Reduce("wildcard", ['DOT']),
            (18, 'SLASH'): Reduce("wildcard", ['DOT']),
            (19, 'set_items'): 75,
            (19, 'NEGATE'): Shift(76),
            (19, 'set_item'): 58,
            (19, 'char'): 59,
            (19, 'CHAR'): Shift(60),
            (19, 'escape_char'): 61,
            (19, 'SLASH'): Shift(62),
            (20, 'CHAR'): Shift(80),
            (21, 'basic'): 22,
            (21, 'concat'): 4,
            (21, 'reserved'): 5,
            (21, 'zero_or_more'): 6,
            (21, 'one_or_more'): 7,
            (21, 'zero_or_one'): 8,
            (21, 'atom'): 9,
            (21, 'group'): 10,
            (21, 'char'): 11,
            (21, 'wildcard'): 12,
            (21, 'positive_set'): 13,
            (21, 'negative_set'): 14,
            (21, 'LPAREN'): Shift(15),
            (21, 'CHAR'): Shift(16),
            (21, 'escape_char'): 17,
            (21, 'DOT'): Shift(18),
            (21, 'LBRACKET'): Shift(19),
            (21, 'SLASH'): Shift(20),
            (22, 'reserved'): 23,
            (22, 'zero_or_more'): 6,
            (22, 'one_or_more'): 7,
            (22, 'zero_or_one'): 8,
            (22, 'atom'): 9,
            (22, 'group'): 10,
            (22, 'char'): 11,
            (22, 'wildcard'): 12,
            (22, 'positive_set'): 13,
            (22, 'negative_set'): 14,
            (22, 'LPAREN'): Shift(15),
            (22, 'CHAR'): Shift(16),
            (22, 'escape_char'): 17,
            (22, 'DOT'): Shift(18),
            (22, 'LBRACKET'): Shift(19),
            (22, 'SLASH'): Shift(20),
            (22, '$'): Reduce("alt", ['regex', 'ALT', 'basic']),
            (22, 'ALT'): Reduce("alt", ['regex', 'ALT', 'basic']),
            (23, '$'): Reduce("concat", ['basic', 'reserved']),
            (23, 'ALT'): Reduce("concat", ['basic', 'reserved']),
            (23, 'DOT'): Reduce("concat", ['basic', 'reserved']),
            (23, 'LBRACKET'): Reduce("concat", ['basic', 'reserved']),
            (23, 'CHAR'): Reduce("concat", ['basic', 'reserved']),
            (23, 'LPAREN'): Reduce("concat", ['basic', 'reserved']),
            (23, 'SLASH'): Reduce("concat", ['basic', 'reserved']),
            (24, '$'): Reduce("zero_or_more", ['atom', 'STAR']),
            (24, 'ALT'): Reduce("zero_or_more", ['atom', 'STAR']),
            (24, 'DOT'): Reduce("zero_or_more", ['atom', 'STAR']),
            (24, 'LBRACKET'): Reduce("zero_or_more", ['atom', 'STAR']),
            (24, 'CHAR'): Reduce("zero_or_more", ['atom', 'STAR']),
            (24, 'LPAREN'): Reduce("zero_or_more", ['atom', 'STAR']),
            (24, 'SLASH'): Reduce("zero_or_more", ['atom', 'STAR']),
            (25, '$'): Reduce("one_or_more", ['atom', 'PLUS']),
            (25, 'ALT'): Reduce("one_or_more", ['atom', 'PLUS']),
            (25, 'DOT'): Reduce("one_or_more", ['atom', 'PLUS']),
            (25, 'LBRACKET'): Reduce("one_or_more", ['atom', 'PLUS']),
            (25, 'CHAR'): Reduce("one_or_more", ['atom', 'PLUS']),
            (25, 'LPAREN'): Reduce("one_or_more", ['atom', 'PLUS']),
            (25, 'SLASH'): Reduce("one_or_more", ['atom', 'PLUS']),
            (26, '$'): Reduce("zero_or_one", ['atom', 'OPT']),
            (26, 'ALT'): Reduce("zero_or_one", ['atom', 'OPT']),
            (26, 'DOT'): Reduce("zero_or_one", ['atom', 'OPT']),
            (26, 'LBRACKET'): Reduce("zero_or_one", ['atom', 'OPT']),
            (26, 'CHAR'): Reduce("zero_or_one", ['atom', 'OPT']),
            (26, 'LPAREN'): Reduce("zero_or_one", ['atom', 'OPT']),
            (26, 'SLASH'): Reduce("zero_or_one", ['atom', 'OPT']),
            (27, 'RPAREN'): Shift(47),
            (27, 'ALT'): Shift(48),
            (28, 'RPAREN'): Reduce("regex", ['alt']),
            (28, 'ALT'): Reduce("regex", ['alt']),
            (29, 'reserved'): 50,
            (29, 'zero_or_more'): 32,
            (29, 'one_or_more'): 33,
            (29, 'zero_or_one'): 34,
            (29, 'atom'): 35,
            (29, 'group'): 36,
            (29, 'char'): 37,
            (29, 'wildcard'): 38,
            (29, 'positive_set'): 39,
            (29, 'negative_set'): 40,
            (29, 'LPAREN'): Shift(41),
            (29, 'CHAR'): Shift(42),
            (29, 'escape_char'): 43,
            (29, 'DOT'): Shift(44),
            (29, 'LBRACKET'): Shift(45),
            (29, 'SLASH'): Shift(46),
            (29, 'RPAREN'): Reduce("regex", ['basic']),
            (29, 'ALT'): Reduce("regex", ['basic']),
            (30, 'RPAREN'): Reduce("basic", ['concat']),
            (30, 'ALT'): Reduce("basic", ['concat']),
            (30, 'DOT'): Reduce("basic", ['concat']),
            (30, 'LBRACKET'): Reduce("basic", ['concat']),
            (30, 'CHAR'): Reduce("basic", ['concat']),
            (30, 'LPAREN'): Reduce("basic", ['concat']),
            (30, 'SLASH'): Reduce("basic", ['concat']),
            (31, 'RPAREN'): Reduce("basic", ['reserved']),
            (31, 'ALT'): Reduce("basic", ['reserved']),
            (31, 'DOT'): Reduce("basic", ['reserved']),
            (31, 'LBRACKET'): Reduce("basic", ['reserved']),
            (31, 'CHAR'): Reduce("basic", ['reserved']),
            (31, 'LPAREN'): Reduce("basic", ['reserved']),
            (31, 'SLASH'): Reduce("basic", ['reserved']),
            (32, 'RPAREN'): Reduce("reserved", ['zero_or_more']),
            (32, 'ALT'): Reduce("reserved", ['zero_or_more']),
            (32, 'DOT'): Reduce("reserved", ['zero_or_more']),
            (32, 'LBRACKET'): Reduce("reserved", ['zero_or_more']),
            (32, 'CHAR'): Reduce("reserved", ['zero_or_more']),
            (32, 'LPAREN'): Reduce("reserved", ['zero_or_more']),
            (32, 'SLASH'): Reduce("reserved", ['zero_or_more']),
            (33, 'RPAREN'): Reduce("reserved", ['one_or_more']),
            (33, 'ALT'): Reduce("reserved", ['one_or_more']),
            (33, 'DOT'): Reduce("reserved", ['one_or_more']),
            (33, 'LBRACKET'): Reduce("reserved", ['one_or_more']),
            (33, 'CHAR'): Reduce("reserved", ['one_or_more']),
            (33, 'LPAREN'): Reduce("reserved", ['one_or_more']),
            (33, 'SLASH'): Reduce("reserved", ['one_or_more']),
            (34, 'RPAREN'): Reduce("reserved", ['zero_or_one']),
            (34, 'ALT'): Reduce("reserved", ['zero_or_one']),
            (34, 'DOT'): Reduce("reserved", ['zero_or_one']),
            (34, 'LBRACKET'): Reduce("reserved", ['zero_or_one']),
            (34, 'CHAR'): Reduce("reserved", ['zero_or_one']),
            (34, 'LPAREN'): Reduce("reserved", ['zero_or_one']),
            (34, 'SLASH'): Reduce("reserved", ['zero_or_one']),
            (35, 'STAR'): Shift(51),
            (35, 'PLUS'): Shift(52),
            (35, 'OPT'): Shift(53),
            (35, 'RPAREN'): Reduce("reserved", ['atom']),
            (35, 'ALT'): Reduce("reserved", ['atom']),
            (35, 'DOT'): Reduce("reserved", ['atom']),
            (35, 'LBRACKET'): Reduce("reserved", ['atom']),
            (35, 'CHAR'): Reduce("reserved", ['atom']),
            (35, 'LPAREN'): Reduce("reserved", ['atom']),
            (35, 'SLASH'): Reduce("reserved", ['atom']),
            (36, 'RPAREN'): Reduce("atom", ['group']),
            (36, 'STAR'): Reduce("atom", ['group']),
            (36, 'PLUS'): Reduce("atom", ['group']),
            (36, 'OPT'): Reduce("atom", ['group']),
            (36, 'ALT'): Reduce("atom", ['group']),
            (36, 'DOT'): Reduce("atom", ['group']),
            (36, 'LBRACKET'): Reduce("atom", ['group']),
            (36, 'CHAR'): Reduce("atom", ['group']),
            (36, 'LPAREN'): Reduce("atom", ['group']),
            (36, 'SLASH'): Reduce("atom", ['group']),
            (37, 'RPAREN'): Reduce("atom", ['char']),
            (37, 'STAR'): Reduce("atom", ['char']),
            (37, 'PLUS'): Reduce("atom", ['char']),
            (37, 'OPT'): Reduce("atom", ['char']),
            (37, 'ALT'): Reduce("atom", ['char']),
            (37, 'DOT'): Reduce("atom", ['char']),
            (37, 'LBRACKET'): Reduce("atom", ['char']),
            (37, 'CHAR'): Reduce("atom", ['char']),
            (37, 'LPAREN'): Reduce("atom", ['char']),
            (37, 'SLASH'): Reduce("atom", ['char']),
            (38, 'RPAREN'): Reduce("atom", ['wildcard']),
            (38, 'STAR'): Reduce("atom", ['wildcard']),
            (38, 'PLUS'): Reduce("atom", ['wildcard']),
            (38, 'OPT'): Reduce("atom", ['wildcard']),
            (38, 'ALT'): Reduce("atom", ['wildcard']),
            (38, 'DOT'): Reduce("atom", ['wildcard']),
            (38, 'LBRACKET'): Reduce("atom", ['wildcard']),
            (38, 'CHAR'): Reduce("atom", ['wildcard']),
            (38, 'LPAREN'): Reduce("atom", ['wildcard']),
            (38, 'SLASH'): Reduce("atom", ['wildcard']),
            (39, 'RPAREN'): Reduce("atom", ['positive_set']),
            (39, 'STAR'): Reduce("atom", ['positive_set']),
            (39, 'PLUS'): Reduce("atom", ['positive_set']),
            (39, 'OPT'): Reduce("atom", ['positive_set']),
            (39, 'ALT'): Reduce("atom", ['positive_set']),
            (39, 'DOT'): Reduce("atom", ['positive_set']),
            (39, 'LBRACKET'): Reduce("atom", ['positive_set']),
            (39, 'CHAR'): Reduce("atom", ['positive_set']),
            (39, 'LPAREN'): Reduce("atom", ['positive_set']),
            (39, 'SLASH'): Reduce("atom", ['positive_set']),
            (40, 'RPAREN'): Reduce("atom", ['negative_set']),
            (40, 'STAR'): Reduce("atom", ['negative_set']),
            (40, 'PLUS'): Reduce("atom", ['negative_set']),
            (40, 'OPT'): Reduce("atom", ['negative_set']),
            (40, 'ALT'): Reduce("atom", ['negative_set']),
            (40, 'DOT'): Reduce("atom", ['negative_set']),
            (40, 'LBRACKET'): Reduce("atom", ['negative_set']),
            (40, 'CHAR'): Reduce("atom", ['negative_set']),
            (40, 'LPAREN'): Reduce("atom", ['negative_set']),
            (40, 'SLASH'): Reduce("atom", ['negative_set']),
            (41, 'regex'): 54,
            (41, 'alt'): 28,
            (41, 'basic'): 29,
            (41, 'concat'): 30,
            (41, 'reserved'): 31,
            (41, 'zero_or_more'): 32,
            (41, 'one_or_more'): 33,
            (41, 'zero_or_one'): 34,
            (41, 'atom'): 35,
            (41, 'group'): 36,
            (41, 'char'): 37,
            (41, 'wildcard'): 38,
            (41, 'positive_set'): 39,
            (41, 'negative_set'): 40,
            (41, 'LPAREN'): Shift(41),
            (41, 'CHAR'): Shift(42),
            (41, 'escape_char'): 43,
            (41, 'DOT'): Shift(44),
            (41, 'LBRACKET'): Shift(45),
            (41, 'SLASH'): Shift(46),
            (42, 'RPAREN'): Reduce("char", ['CHAR']),
            (42, 'STAR'): Reduce("char", ['CHAR']),
            (42, 'PLUS'): Reduce("char", ['CHAR']),
            (42, 'OPT'): Reduce("char", ['CHAR']),
            (42, 'ALT'): Reduce("char", ['CHAR']),
            (42, 'DOT'): Reduce("char", ['CHAR']),
            (42, 'LBRACKET'): Reduce("char", ['CHAR']),
            (42, 'CHAR'): Reduce("char", ['CHAR']),
            (42, 'LPAREN'): Reduce("char", ['CHAR']),
            (42, 'SLASH'): Reduce("char", ['CHAR']),
            (43, 'RPAREN'): Reduce("char", ['escape_char']),
            (43, 'STAR'): Reduce("char", ['escape_char']),
            (43, 'PLUS'): Reduce("char", ['escape_char']),
            (43, 'OPT'): Reduce("char", ['escape_char']),
            (43, 'ALT'): Reduce("char", ['escape_char']),
            (43, 'DOT'): Reduce("char", ['escape_char']),
            (43, 'LBRACKET'): Reduce("char", ['escape_char']),
            (43, 'CHAR'): Reduce("char", ['escape_char']),
            (43, 'LPAREN'): Reduce("char", ['escape_char']),
            (43, 'SLASH'): Reduce("char", ['escape_char']),
            (44, 'RPAREN'): Reduce("wildcard", ['DOT']),
            (44, 'STAR'): Reduce("wildcard", ['DOT']),
            (44, 'PLUS'): Reduce("wildcard", ['DOT']),
            (44, 'OPT'): Reduce("wildcard", ['DOT']),
            (44, 'ALT'): Reduce("wildcard", ['DOT']),
            (44, 'DOT'): Reduce("wildcard", ['DOT']),
            (44, 'LBRACKET'): Reduce("wildcard", ['DOT']),
            (44, 'CHAR'): Reduce("wildcard", ['DOT']),
            (44, 'LPAREN'): Reduce("wildcard", ['DOT']),
            (44, 'SLASH'): Reduce("wildcard", ['DOT']),
            (45, 'set_items'): 56,
            (45, 'NEGATE'): Shift(57),
            (45, 'set_item'): 58,
            (45, 'char'): 59,
            (45, 'CHAR'): Shift(60),
            (45, 'escape_char'): 61,
            (45, 'SLASH'): Shift(62),
            (46, 'CHAR'): Shift(74),
            (47, '$'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'STAR'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'PLUS'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'OPT'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'ALT'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'DOT'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'LBRACKET'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'CHAR'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'LPAREN'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (47, 'SLASH'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (48, 'basic'): 49,
            (48, 'concat'): 30,
            (48, 'reserved'): 31,
            (48, 'zero_or_more'): 32,
            (48, 'one_or_more'): 33,
            (48, 'zero_or_one'): 34,
            (48, 'atom'): 35,
            (48, 'group'): 36,
            (48, 'char'): 37,
            (48, 'wildcard'): 38,
            (48, 'positive_set'): 39,
            (48, 'negative_set'): 40,
            (48, 'LPAREN'): Shift(41),
            (48, 'CHAR'): Shift(42),
            (48, 'escape_char'): 43,
            (48, 'DOT'): Shift(44),
            (48, 'LBRACKET'): Shift(45),
            (48, 'SLASH'): Shift(46),
            (49, 'reserved'): 50,
            (49, 'zero_or_more'): 32,
            (49, 'one_or_more'): 33,
            (49, 'zero_or_one'): 34,
            (49, 'atom'): 35,
            (49, 'group'): 36,
            (49, 'char'): 37,
            (49, 'wildcard'): 38,
            (49, 'positive_set'): 39,
            (49, 'negative_set'): 40,
            (49, 'LPAREN'): Shift(41),
            (49, 'CHAR'): Shift(42),
            (49, 'escape_char'): 43,
            (49, 'DOT'): Shift(44),
            (49, 'LBRACKET'): Shift(45),
            (49, 'SLASH'): Shift(46),
            (49, 'RPAREN'): Reduce("alt", ['regex', 'ALT', 'basic']),
            (49, 'ALT'): Reduce("alt", ['regex', 'ALT', 'basic']),
            (50, 'RPAREN'): Reduce("concat", ['basic', 'reserved']),
            (50, 'ALT'): Reduce("concat", ['basic', 'reserved']),
            (50, 'DOT'): Reduce("concat", ['basic', 'reserved']),
            (50, 'LBRACKET'): Reduce("concat", ['basic', 'reserved']),
            (50, 'CHAR'): Reduce("concat", ['basic', 'reserved']),
            (50, 'LPAREN'): Reduce("concat", ['basic', 'reserved']),
            (50, 'SLASH'): Reduce("concat", ['basic', 'reserved']),
            (51, 'RPAREN'): Reduce("zero_or_more", ['atom', 'STAR']),
            (51, 'ALT'): Reduce("zero_or_more", ['atom', 'STAR']),
            (51, 'DOT'): Reduce("zero_or_more", ['atom', 'STAR']),
            (51, 'LBRACKET'): Reduce("zero_or_more", ['atom', 'STAR']),
            (51, 'CHAR'): Reduce("zero_or_more", ['atom', 'STAR']),
            (51, 'LPAREN'): Reduce("zero_or_more", ['atom', 'STAR']),
            (51, 'SLASH'): Reduce("zero_or_more", ['atom', 'STAR']),
            (52, 'RPAREN'): Reduce("one_or_more", ['atom', 'PLUS']),
            (52, 'ALT'): Reduce("one_or_more", ['atom', 'PLUS']),
            (52, 'DOT'): Reduce("one_or_more", ['atom', 'PLUS']),
            (52, 'LBRACKET'): Reduce("one_or_more", ['atom', 'PLUS']),
            (52, 'CHAR'): Reduce("one_or_more", ['atom', 'PLUS']),
            (52, 'LPAREN'): Reduce("one_or_more", ['atom', 'PLUS']),
            (52, 'SLASH'): Reduce("one_or_more", ['atom', 'PLUS']),
            (53, 'RPAREN'): Reduce("zero_or_one", ['atom', 'OPT']),
            (53, 'ALT'): Reduce("zero_or_one", ['atom', 'OPT']),
            (53, 'DOT'): Reduce("zero_or_one", ['atom', 'OPT']),
            (53, 'LBRACKET'): Reduce("zero_or_one", ['atom', 'OPT']),
            (53, 'CHAR'): Reduce("zero_or_one", ['atom', 'OPT']),
            (53, 'LPAREN'): Reduce("zero_or_one", ['atom', 'OPT']),
            (53, 'SLASH'): Reduce("zero_or_one", ['atom', 'OPT']),
            (54, 'RPAREN'): Shift(55),
            (54, 'ALT'): Shift(48),
            (55, 'RPAREN'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'STAR'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'PLUS'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'OPT'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'ALT'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'DOT'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'LBRACKET'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'CHAR'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'LPAREN'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (55, 'SLASH'): Reduce("group", ['LPAREN', 'regex', 'RPAREN']),
            (56, 'RBRACKET'): Shift(63),
            (56, 'set_item'): 64,
            (56, 'char'): 59,
            (56, 'CHAR'): Shift(60),
            (56, 'escape_char'): 61,
            (56, 'SLASH'): Shift(62),
            (57, 'set_items'): 65,
            (57, 'set_item'): 58,
            (57, 'char'): 59,
            (57, 'CHAR'): Shift(60),
            (57, 'escape_char'): 61,
            (57, 'SLASH'): Shift(62),
            (58, 'RBRACKET'): Reduce("set_items", ['set_item']),
            (58, 'CHAR'): Reduce("set_items", ['set_item']),
            (58, 'SLASH'): Reduce("set_items", ['set_item']),
            (59, 'TO'): Shift(67),
            (59, 'RBRACKET'): Reduce("set_item", ['char']),
            (59, 'CHAR'): Reduce("set_item", ['char']),
            (59, 'SLASH'): Reduce("set_item", ['char']),
            (60, 'TO'): Reduce("char", ['CHAR']),
            (60, 'RBRACKET'): Reduce("char", ['CHAR']),
            (60, 'CHAR'): Reduce("char", ['CHAR']),
            (60, 'SLASH'): Reduce("char", ['CHAR']),
            (61, 'TO'): Reduce("char", ['escape_char']),
            (61, 'RBRACKET'): Reduce("char", ['escape_char']),
            (61, 'CHAR'): Reduce("char", ['escape_char']),
            (61, 'SLASH'): Reduce("char", ['escape_char']),
            (62, 'CHAR'): Shift(73),
            (63, 'RPAREN'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'STAR'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'PLUS'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'OPT'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'ALT'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'DOT'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'LBRACKET'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'CHAR'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'LPAREN'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (63, 'SLASH'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (64, 'RBRACKET'): Reduce("set_items", ['set_items', 'set_item']),
            (64, 'CHAR'): Reduce("set_items", ['set_items', 'set_item']),
            (64, 'SLASH'): Reduce("set_items", ['set_items', 'set_item']),
            (65, 'RBRACKET'): Shift(66),
            (65, 'set_item'): 64,
            (65, 'char'): 59,
            (65, 'CHAR'): Shift(60),
            (65, 'escape_char'): 61,
            (65, 'SLASH'): Shift(62),
            (66, 'RPAREN'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'STAR'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'PLUS'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'OPT'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'ALT'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'DOT'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'LBRACKET'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'CHAR'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'LPAREN'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (66, 'SLASH'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (67, 'char'): 68,
            (67, 'CHAR'): Shift(69),
            (67, 'escape_char'): 70,
            (67, 'SLASH'): Shift(71),
            (68, 'RBRACKET'): Reduce("set_item", ['char', 'TO', 'char']),
            (68, 'CHAR'): Reduce("set_item", ['char', 'TO', 'char']),
            (68, 'SLASH'): Reduce("set_item", ['char', 'TO', 'char']),
            (69, 'RBRACKET'): Reduce("char", ['CHAR']),
            (69, 'CHAR'): Reduce("char", ['CHAR']),
            (69, 'SLASH'): Reduce("char", ['CHAR']),
            (70, 'RBRACKET'): Reduce("char", ['escape_char']),
            (70, 'CHAR'): Reduce("char", ['escape_char']),
            (70, 'SLASH'): Reduce("char", ['escape_char']),
            (71, 'CHAR'): Shift(72),
            (72, 'RBRACKET'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (72, 'CHAR'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (72, 'SLASH'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (73, 'TO'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (73, 'RBRACKET'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (73, 'CHAR'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (73, 'SLASH'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'RPAREN'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'STAR'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'PLUS'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'OPT'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'ALT'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'DOT'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'LBRACKET'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'CHAR'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'LPAREN'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (74, 'SLASH'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (75, 'RBRACKET'): Shift(77),
            (75, 'set_item'): 64,
            (75, 'char'): 59,
            (75, 'CHAR'): Shift(60),
            (75, 'escape_char'): 61,
            (75, 'SLASH'): Shift(62),
            (76, 'set_items'): 78,
            (76, 'set_item'): 58,
            (76, 'char'): 59,
            (76, 'CHAR'): Shift(60),
            (76, 'escape_char'): 61,
            (76, 'SLASH'): Shift(62),
            (77, '$'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'STAR'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'PLUS'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'OPT'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'ALT'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'DOT'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'LBRACKET'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'CHAR'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'LPAREN'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (77, 'SLASH'): Reduce("positive_set", ['LBRACKET', 'set_items', 'RBRACKET']),
            (78, 'RBRACKET'): Shift(79),
            (78, 'set_item'): 64,
            (78, 'char'): 59,
            (78, 'CHAR'): Shift(60),
            (78, 'escape_char'): 61,
            (78, 'SLASH'): Shift(62),
            (79, '$'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'STAR'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'PLUS'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'OPT'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'ALT'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'DOT'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'LBRACKET'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'CHAR'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'LPAREN'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (79, 'SLASH'): Reduce("negative_set", ['LBRACKET', 'NEGATE', 'set_items', 'RBRACKET']),
            (80, '$'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'STAR'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'PLUS'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'OPT'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'ALT'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'DOT'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'LBRACKET'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'CHAR'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'LPAREN'): Reduce("escape_char", ['SLASH', 'CHAR']),
            (80, 'SLASH'): Reduce("escape_char", ['SLASH', 'CHAR']),
            
        }

    def format_tree(self, tree, level=0, inc=1):
        ret = ""
        if isinstance(tree, dict):
            for lhs, children in tree.items():
                ret += " " * level + lhs + "\n"
                ret += self.format_tree(children, level + inc)
        elif isinstance(tree, list):
            for item in tree:
                child = self.format_tree(
                    item, level + (inc if not isinstance(item, list) else 0))
                ret += child
        else:
            ret += " " * level + tree + "\n"
        return ret

    def parse(self, tokens, build_tree=False):
        if not build_tree and not self.dispatch:
            raise ValueError("dispatch required to build ast")
        # add the '$' to mark EOF
        tokens.append("$")
        index = 0
        stack = [0]
        node_stack = []

        cur_token = tokens[index]
        while True:
            try:
                move = self.table[stack[-1], cur_token]
            except KeyError as e:
                raise ParseError(f"no transition in table for {e}")
            if isinstance(move, Shift):
                # shift a token on the stack
                stack.append(cur_token)
                node_stack.append(cur_token)
                stack.append(move.transition_state)

                index += 1
                cur_token = tokens[index]

            elif isinstance(move, Reduce):
                if move.rhs != [""]:
                    # pop 2 * the amount of prods, and replace
                    # it with the prod's non-terminal
                    stack = stack[:-(2 * len(move.rhs))]
                    children = [
                        node_stack.pop() for _ in range(0, len(move.rhs))
                    ]
                    # get the node's children
                    if build_tree:
                        node_stack.append({
                            move.lhs:
                            list(reversed(children))
                        })
                    else:
                        node_stack.append(self.dispatch[move.lhs](
                            list(reversed(children))))
                else:
                    node_stack.append([])
                top = stack[-1]
                stack.append(move.lhs)
                try:
                    stack.append(self.table[top, move.lhs])
                except KeyError as e:
                    raise ParseError(f"no transition in table for {e}")

            elif isinstance(move, Accept):
                # if not all the tokens were seen before
                # we got the start symbol: error
                assert index == len(tokens) - 1, "garbage after parsed stream"
                # remove the $ an return the parse node_stack
                tokens.remove("$")
                return node_stack

